[DEFAULT]
env=local
gcs_base_path =gs://cv-datacafe//Inventory//

bigquery_jar=C:\Users\Ganesh Dabhade\Desktop\retail_project\config_file\spark-bigquery-with-dependencies_2.12-0.27.1.jar
sql_jar=C:\Users\Ganesh Dabhade\Desktop\data_cafe\git\config\mysql-connector-java-8.0.27.jar
pem_file=C:\Users\Ganesh Dabhade\PycharmProjects\Retail_data_platform\json\gcp_json.json
project_id=lyrical-brook-374409
dataset_name=fact_and_dimension
temporary_gcs_bucket=temp_bucket_bigquery

#tables_run_seq=sales_fact,customer_dimension,date_dimension,promotion_dimension
tables_run_seq=Inventory_Fact

[sales_fact]
table_name=sales_fact
required_input_tables_json=[{"table_name":"CustomerOrder","base_path":"gs://cv-datacafe-stg//retail-db//"},{"table_name":"CustomerOrderLineItem","base_path":"gs://cv-datacafe-stg//retail-db//"},{"table_name":"Transaction"},{"table_name":"PaymentOnAccountLineItem","base_path":"gs://cv-datacafe-stg//retail-db//"},{"table_name":"CurrencyTypeCode","base_path":"gs://cv-datacafe-stg//retail-db//"},{"table_name":"CustomerOrderProductLineItem","base_path":"gs://cv-datacafe-stg//retail-db//"},{"table_name":"CustomerOrderProductPriceModifier","base_path":"gs://cv-datacafe-stg//retail-db//"},{"table_name":"CustomerOrderControlTransactionLineItem","base_path":"gs://cv-datacafe-stg//retail-db//"}]
join_query=select t.TransactionID,coli.RetailTransactionLineItemSequenceNumber, coctli.addressID,t.BusinessDayDate,t.CancelledFlag,t.VoidedFlag,t.SuspendedFlag,co.CustomerID,copli.FulfilledItemQuantity as UnitCount,co.ISOCurrencyCode,copli.ItemID, copli.SaleUnitRetailPriceAmount as RegularUnitPrice, copli.FulfilledItemQuantity as Quantity,copli.SaleUnitRetailPriceAmount as UnitCostPrice, coppm.Amount as UnitDiscountAmount, '' as IssuingRetailStoreID, coppm.PreviousPrice as PreviousPrice_1, coppm.Percent  as Percent_1, coppm.Amount as Amount_1, coppm.NewPrice as NewPrice_1, coppm.PromotionalOfferID as PromotionalOfferID_1,coppm.ReasonCode from CustomerOrder co join CustomerOrderLineItem coli on co.CustomerOrderID = coli.CustomerOrderID join Transaction t on coli.TransactionID = t.TransactionID join PaymentOnAccountLineItem poali on coli.RetailTransactionLineItemSequenceNumber = poali.RetailTransactionLineItemSequenceNumber join CurrencyTypeCode ctc on co.ISOCurrencyCode = ctc.ISOCurrencyCode join CustomerOrderProductLineItem copli on co.CustomerOrderID = copli.CustomerOrderID join CustomerOrderProductPriceModifier coppm on co.CustomerOrderID = coppm.CustomerOrderID join CustomerOrderControlTransactionLineItem coctli on co.CustomerOrderID = coctli.CustomerOrderID
destination_table=sales_fact
transformation=::lit::TransactionLevelDiscountAmount,1::lit::RegularUnitPriceQuantity,1::lit::ActualUnitPriceQuantity,RegularUnitPrice:RegularUnitPriceQuantity::multiply::ExtendedAmount
columns_to_select=TransactionID,RetailTransactionLineItemSequenceNumber,addressID,BusinessDayDate,CancelledFlag,VoidedFlag,SuspendedFlag,CustomerID,UnitCount,ISOCurrencyCode,ItemID,RegularUnitPrice,RegularUnitPriceQuantity,ActualUnitPriceQuantity,Quantity,UnitCostPrice,UnitDiscountAmount,IssuingRetailStoreID,TransactionLevelDiscountAmount,PreviousPrice_1,Percent_1,Amount_1,NewPrice_1,PromotionalOfferID_1,ReasonCode,ExtendedAmount

[customer_dimension]
table_name=customer_dimension
required_input_tables_json=[{"table_name":"Customer","base_path":"gs://cv-datacafe-stg//retail-db//"},{"table_name":"Party","base_path":"gs://cv-datacafe-stg//retail-db//"},{"table_name":"CustomerOrder"},{"table_name":"CustomerOrderControlTransactionLineItem","base_path":"gs://cv-datacafe-stg//retail-db//"},{"table_name":"Address","base_path":"gs://cv-datacafe-stg//retail-db//"},{"table_name":"CustomerAccount","base_path":"gs://cv-datacafe-stg//retail-db//"}]
join_query=select c.CustomerId, c.AnonymousFlag, ca.CustomerAccountEffectiveDate as RegistrationDateTime, p.PartyID, p.PartyTypeCode, c.Salutation, c.Name, coctli.addressID  from CustomerAccount ca join Customer c on ca.CustomerID = c.CustomerID join Party p on c.PartyID = p.PartyID join CustomerOrder co on c.CustomerID = co.CustomerID join CustomerOrderControlTransactionLineItem coctli on co.CustomerOrderID = coctli.CustomerOrderID join Address a on coctli.addressID = a.addressID
destination_table=customer_dimension
transformation=
columns_to_select=CustomerId,AnonymousFlag,RegistrationDateTime,PartyID,PartyTypeCode,Salutation,Name,AddressID

[date_dimension]
table_name=date_dimension
required_input_tables_json=[{"table_name":"Transaction","base_path":"gs://cv-datacafe-stg//retail-db//"}]
join_query=select t.BusinessDayDate from Transaction t
destination_table=date_dimension
transformation=BusinessDayDate::dayofweek::DayOfWeek,BusinessDayDate::dayofmonth::DayOfMonth,BusinessDayDate::dayofyear::DayOfYear,BusinessDayDate::monthnumber::MonthNumber,BusinessDayDate::monthname::MonthName,BusinessDayDate::yearmonth::YearMonth,BusinessDayDate::quarter::CalendarYearQuarter,BusinessDayDate::weekofyear::WeekOfYear

[promotion_dimension]
table_name=promotion_dimension
required_input_tables_json=[{"table_name":"PromotionalOffer","base_path":"gs://cv-datacafe-stg//retail-db//"}]
join_query=select po.PromotionalOfferID, po.BusinessUnitGroupID, po.EffectiveDate, po.ExpiryDate, po.StatusCode, po.OperatorDisplayName from PromotionalOffer po
destination_table=promotion_dimension
transformation=::lit::HolidayName,::lit::ISOCountryCode

##Inventory Diamentional tables
[Location_Dimension]
table_name=Location_Dimension
required_input_tables_json=[{"table_name":"InventoryLocation","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"ItemInventory","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"ICDMerchandiseLineItem","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"InventoryControlDocument","base_path":"gs://cv-datacafe//Inventory//"}]
join_query= select il.LocationID,icd.DestinationBusinessUnitID,il.SiteID,il.SizeQuantity,il.LocationName,il.ParentLocationID,il.LocationLevelID from InventoryLocation il join ItemInventory it on il.LocationID = it.LocationID join ICDMerchandiseLineItem iml on it.ItemID = iml.ItemID join InventoryControlDocument icd on iml.InventoryControlDocumentID = icd.InventoryControlDocumentID
destination_table=Location_Dimension
columns_to_select=LocationID,DestinationBusinessUnitID,SiteID,SizeQuantity,LocationName,ParentLocationID,LocationLevelID

[Inventory_Fact]
table_name=Inventory_Fact
markdown_item_id=2058,5484,3763
markdown_percentage=5
markup_item_id=2058,5484,4390
markup_percentage=8
mkdown_offer=promotions,quarterly
mkup_offer=regular,special
mkdown_start_date=2023-01-10
mkdown_offer_duration=30
markdown_offer_percentage=10
markup_start_date=2023-01-10
markup_offer_duration=30
markup_offer_percentage=15
destination_table=Inventory_fact
required_input_tables_json = [{"table_name":"freightBill","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"vendor","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"ShipmentContainerMerchandiseLineItem","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"ShipmentContainer","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"ReturnDocument","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"ReturnAuthorizationRequest","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"RequestForDebitCreditDocument","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"ReceivingDocument","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"PackingSlip","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"OrderDocument","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"ItemInventory","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"InventoryLocation","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"InventoryControlDocument","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"ICDMerchandiseLineItem","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"ICDLineItem","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"ICDChargeLineItem","base_path":"gs://cv-datacafe//Inventory//"},{"table_name":"ICDAllowanceLineItem","base_path":"gs://cv-datacafe//Inventory//"}]
join_query = select icd_df.*,icda_df.*,icda_df.Amount as AllowanceAmount,icdc_df.*,icdc_df.Amount as ChargeAmount,icm_df.*,ii.LocationID ,ii.ItemInventoryStateID,ii.RevenueCostCenterID ,ii.BeginningUnitCount,ii.GrossSalesUnitCount,ii.ReturnUnitCount,ii.ReceivedUnitCount,ii.OrderEventTypeCode,ii.ReturnToVendorUnitCount,ii.AdjustmentUnitCount,ii.CurrentUnitCount from InventoryControlDocument icd_df join ICDAllowanceLineItem icda_df on icd_df.INVENTORYCONTROLDOCUMENTID = icda_df.INVENTORYCONTROLDOCUMENTID join ICDChargeLineItem icdc_df on icdc_df.INVENTORYCONTROLDOCUMENTID = icd_df.INVENTORYCONTROLDOCUMENTID join ICDMerchandiseLineItem icm_df on icd_df.INVENTORYCONTROLDOCUMENTID = icm_df.INVENTORYCONTROLDOCUMENTID join ItemInventory ii on ii.ITEMID = icm_df.ITEMID
transformation= CreateDateTimestamp::return_same::FirstReceiptDate,CompleteDateTimestamp::return_same::LastReceiptDate,UnitNetCostAmount::return_same::CurrentSaleUnitPriceAmount,UnitBaseCostAmount::return_same::UnitCost,UnitCount::return_same::OnOrderCount,UnitNetCostAmount::return_same::OnOrderCost,ReceivedUnitCount::return_same::ReceivedUnitCount,UnitBaseCostAmount:UnitNetCostAmount::add::CummulativeReceivedCostAmount,UnitBaseCostAmount:AllowanceAmount:ChargeAmount::add::CummulativeGrossSalesRetailAmount,UnitBaseCostAmount::return_same::BeginningValueAmount,ReturnUnitCount::return_same::ReturnUnitCount,ReturnUnitCount:CummulativeGrossSalesRetailAmount::multiply::CummulativeReturnRetailAmount,AdjustmentUnitCount::return_same::AdjustmentUnitCount,ReturnToVendorUnitCount:CummulativeGrossSalesRetailAmount::multiply::CummulativeReturnToVendorRetailAmount,AdjustmentUnitCount:CummulativeGrossSalesRetailAmount::multiply::CummulativeAdjustmentRetailAmount,BeginningUnitCount:ReceivedUnitCount:ReturnUnitCount:GrossSalesUnitCount::current_cnt::EndingUnitCount,CummulativeGrossSalesRetailAmount:EndingUnitCount::multiply::EndingValueAmount,UnitNetCostAmount::cpm::CummulativePermanentMarkdownAmount,UnitNetCostAmount::cpm::CummulativePermanentMarkupAmount,UnitNetCostAmount::ctm::CummulativeTemporaryMarkdownAmount,UnitNetCostAmount::ctm::CummulativeTemporaryMarkupAmount,CummulativePermanentMarkdownAmount:CummulativeTemporaryMarkdownAmount::add::CummulativeDiscountAmount,CummulativePermanentMarkdownAmount:CummulativeTemporaryMarkdownAmount:BeginningValueAmount::bcm::BeginningCumulativeMarkdownAmount,CummulativePermanentMarkdownAmount:CummulativeTemporaryMarkdownAmount:BeginningValueAmount::bcm::BeginningCumulativeMarkdownPercent,CummulativeGrossSalesRetailAmount:CummulativeReturnRetailAmount:CummulativeReturnToVendorRetailAmount:CummulativeAdjustmentRetailAmount::add::CummulativeReceivedRetailAmount,CreateDateTimestamp::cal_periodid::CalendarReportingPeriodID
columns_to_select= CalendarReportingPeriodID,FirstReceiptDate,LastReceiptDate,ItemID,CurrentSaleUnitPriceAmount,UnitCost,OnOrderCount,BeginningUnitCount,ReceivedUnitCount,ReturnUnitCount,GrossSalesUnitCount,ReturnToVendorUnitCount,EndingUnitCount,CummulativeReceivedCostAmount,CummulativeReceivedRetailAmount,BeginningValueAmount,BeginningCumulativeMarkdownAmount,BeginningCumulativeMarkdownPercent,CummulativeGrossSalesRetailAmount,CummulativeReturnRetailAmount,CummulativeReturnToVendorRetailAmount,CummulativeAdjustmentRetailAmount,CummulativePermanentMarkdownAmount,CummulativeTemporaryMarkdownAmount,CummulativePermanentMarkupAmount,CummulativeTemporaryMarkupAmount,CummulativeDiscountAmount,EndingValueAmount

[item_dimension]
table_name=item_dimension
required_input_tables_json= [{"table_name":"ItemInventory","base_path":"gs://cv-datacafe//Inventory/"},{"table_name":"ICDMerchandiseLineItem","base_path":"gs://cv-datacafe//Inventory/"},{"table_name":"ICDLineItem","base_path":"gs://cv-datacafe//Inventory/"}]
join_query=  select ii.ItemId , icdmli.ItemDescription , icdli.LineItemTypeCode as ItemTypeCode,icdmli.CostPerUnitTypeCode,   ii.ItemInventoryStateID   from ItemInventory ii join ICDMerchandiseLineItem icdmli on ii.itemID=icdmli.itemID join ICDLineItem icdli on icdli.InventoryControlDocumentID= icdmli.InventoryControlDocumentID
destination_table=item_dimension
columns_to_select=ItemId, ItemDescription, ItemTypeCode, CostPerUnitTypeCode, ItemInventoryStateID