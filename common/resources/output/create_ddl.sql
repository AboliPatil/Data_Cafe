CREATE TABLE IF NOT EXISTS Address(AddressID integer NOT NULL UNIQUE,AddressLine1 varchar(80),AddressLine2 varchar(80),AddressLine3 varchar(80),AddressLine4 varchar(80),City varchar(30),Territory varchar(50),PostalCodeID integer,ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (AddressID));
CREATE TABLE IF NOT EXISTS BusinessUnitGroup(BusinessUnitGroupID integer NOT NULL UNIQUE,BusinessUnitGroupName varchar(40),ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (BusinessUnitGroupID));
CREATE TABLE IF NOT EXISTS CurrencyTypeCode(ISOCurrencyCode char(3) NOT NULL UNIQUE,ISOCurrencyNumber char(3) NOT NULL,ISOCurrencyName varchar(40),RetailerAssignedCurrencyTypeCode varchar(20) NOT NULL,Symbol varchar(40),ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (ISOCurrencyCode));
CREATE TABLE IF NOT EXISTS Customer(CustomerID int NOT NULL UNIQUE,PartyID int DEFAULT NULL,AnonymousFlag int DEFAULT NULL,ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (CustomerID),FOREIGN KEY(PartyID) REFERENCES Party(PartyID));
CREATE TABLE IF NOT EXISTS CustomerAccount(CustomerAccountID int not null UNIQUE,CustomerAccountName varchar(40),CustomerAccountType varchar(20),CustomerID integer,CustomerAccountEffectiveDate datetime,CustomerAccountExpirationDate datetime,StatusCode char(5),DefaultShipTo varchar(70),ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (CustomerAccountID),FOREIGN KEY(CustomerID) REFERENCES Customer(CustomerID));
CREATE TABLE IF NOT EXISTS CustomerAccountCard(CustomerAccountCardID varchar(20) not null UNIQUE,ExpirationDate datetime,IssueSequenceNumber integer,ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (CustomerAccountCardID));
CREATE TABLE IF NOT EXISTS CustomerAccountInvoice(CustomerAccountInvoiceID integer not null UNIQUE,reportingTime datetime,InvoiceContent varchar(10),InvoiceTotalAmount decimal(7,2),PaymentReceivedAmount decimal(7,2),CustomerAccountID integer,ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (CustomerAccountInvoiceID),FOREIGN KEY(CustomerAccountID) REFERENCES CustomerAccount(CustomerAccountID));
CREATE TABLE IF NOT EXISTS CustomerOrder(CustomerOrderID integer NOT NULL UNIQUE,CustomerOrderTypeCode char(2),CustomerID integer,ISOCurrencyCode char(3),CustomerAccountID integer,ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (CustomerOrderID),FOREIGN KEY(CustomerOrderTypeCode) REFERENCES CustomerOrderType(CustomerOrderTypeCode),FOREIGN KEY(CustomerID) REFERENCES Customer(CustomerID),FOREIGN KEY(ISOCurrencyCode) REFERENCES CurrencyTypeCode(ISOCurrencyCode),FOREIGN KEY(CustomerAccountID) REFERENCES CustomerAccount(CustomerAccountID));
CREATE TABLE IF NOT EXISTS CustomerOrderControlTransaction(TransactionID char(32),CustomerOrderID integer,CustomerOrderTypeCode char(2),ingestionTimeStamp datetime DEFAULT now(),FOREIGN KEY(TransactionID) REFERENCES Transaction(TransactionID),FOREIGN KEY(CustomerOrderID) REFERENCES CustomerOrder(CustomerOrderID),FOREIGN KEY(CustomerOrderTypeCode) REFERENCES CustomerOrderType(CustomerOrderTypeCode));
CREATE TABLE IF NOT EXISTS CustomerOrderControlTransactionLineItem(TransactionID char(32),CustomerOrderControlTransactionLineItemSequenceNumber smallint not null UNIQUE,CustomerOrderID integer,CustomerOrderLineItemSequenceNumber smallint,AddressID integer,NewItemID char(32),ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (TransactionID,CustomerOrderControlTransactionLineItemSequenceNumber),FOREIGN KEY(TransactionID) REFERENCES Transaction(TransactionID),FOREIGN KEY(CustomerOrderID) REFERENCES CustomerOrder(CustomerOrderID),FOREIGN KEY(CustomerOrderLineItemSequenceNumber) REFERENCES CustomerOrderLineItem(CustomerOrderLineItemSequenceNumber));
CREATE TABLE IF NOT EXISTS CustomerOrderLineItem(CustomerOrderID integer,CustomerOrderLineItemSequenceNumber smallint not null UNIQUE,TransactionID char(32),RetailTransactionLineItemSequenceNumber smallint,RelativeOrder smallint,LineItemNumber smallint,ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (CustomerOrderLineItemSequenceNumber),FOREIGN KEY(CustomerOrderID) REFERENCES CustomerOrder(CustomerOrderID),FOREIGN KEY(TransactionID) REFERENCES Transaction(TransactionID),FOREIGN KEY(RetailTransactionLineItemSequenceNumber) REFERENCES PaymentOnAccountLineItem(RetailTransactionLineItemSequenceNumber));
CREATE TABLE IF NOT EXISTS CustomerOrderPaymentLineItem(CustomerOrderID integer,CustomerOrderLineItemSequenceNumber smallint,TransactionID char(32),RetailTransactionLineItemSequenceNumber smallint,ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (CustomerOrderID,CustomerOrderLineItemSequenceNumber),FOREIGN KEY(CustomerOrderID) REFERENCES CustomerOrder(CustomerOrderID),FOREIGN KEY(CustomerOrderLineItemSequenceNumber) REFERENCES CustomerOrderLineItem(CustomerOrderLineItemSequenceNumber),FOREIGN KEY(TransactionID) REFERENCES Transaction(TransactionID));
CREATE TABLE IF NOT EXISTS CustomerOrderProductAssignment(CustomerOrderID integer,CustomerOrderLineItemSequenceNumber smallint,CustomerOrderGroupID integer,CustomerOrderProductAssignmentQuantity decimal(9,3),ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (CustomerOrderID,CustomerOrderLineItemSequenceNumber,CustomerOrderGroupID),FOREIGN KEY(CustomerOrderID) REFERENCES CustomerOrder(CustomerOrderID),FOREIGN KEY(CustomerOrderLineItemSequenceNumber) REFERENCES CustomerOrderLineItem(CustomerOrderLineItemSequenceNumber),FOREIGN KEY(CustomerOrderGroupID) REFERENCES CustomerOrderProductGroup(CustomerOrderGroupID),FOREIGN KEY(CustomerOrderGroupID) REFERENCES CustomerOrderProductGroup(CustomerOrderGroupID));
CREATE TABLE IF NOT EXISTS CustomerOrderProductGroup(CustomerOrderGroupID integer not null UNIQUE,Inventory integer,CustomerOrderProductGroupTypeCode char(2),SupplierID integer,ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (CustomerOrderGroupID));
CREATE TABLE IF NOT EXISTS CustomerOrderProductGroupType(CustomerOrderProductGroupTypeCode char(2) not null UNIQUE,CustomerOrderProductGroupTypeName varchar(40),ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (CustomerOrderProductGroupTypeCode));
CREATE TABLE IF NOT EXISTS CustomerOrderProductLineItem(CustomerOrderID integer,CustomerOrderLineItemSequenceNumber smallint,ItemID char(32),Description varchar(255),OrderedItemQuantity DECIMAL(9,3),FulfilledItemQuantity DECIMAL(9,3),SaleUnitRetailPriceAmount decimal(7,2),TotalRetailPriceAmount decimal(16,5),itemUnitSystem integer,ingestionTimeStamp datetime DEFAULT now(),FOREIGN KEY(CustomerOrderID) REFERENCES CustomerOrder(CustomerOrderID),FOREIGN KEY(CustomerOrderLineItemSequenceNumber) REFERENCES CustomerOrderLineItem(CustomerOrderLineItemSequenceNumber));
CREATE TABLE IF NOT EXISTS CustomerOrderProductPriceModifier(CustomerOrderLineItemSequenceNumber smallint,CustomerOrderID int,PriceModifierSequenceNumber smallint,PromotionalOfferID integer,Percent decimal(7,4),Amount decimal(7,2),ReasonCode varchar(20),PreviousPrice decimal(7,2),NewPrice decimal(7,2),ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (CustomerOrderLineItemSequenceNumber,CustomerOrderID,PriceModifierSequenceNumber),FOREIGN KEY(CustomerOrderID) REFERENCES CustomerOrder(CustomerOrderID),FOREIGN KEY(ReasonCode) REFERENCES Reason(ReasonCode));
CREATE TABLE IF NOT EXISTS CustomerOrderType(CustomerOrderTypeCode char(2) NOT NULL UNIQUE,CustomerOrderTypeName varchar(40),ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (CustomerOrderTypeCode));
CREATE TABLE IF NOT EXISTS Party(PartyID int NOT NULL UNIQUE,PartyTypeCode varchar(20),ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (PartyID));
CREATE TABLE IF NOT EXISTS PaymentOnAccountLineItem(TransactionID char(32),RetailTransactionLineItemSequenceNumber smallint,CustomerAccountID integer,CustomerAccountCardID varchar(20),AmountReceived decimal(16,5),CustomerAccountInvoiceID integer,ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (RetailTransactionLineItemSequenceNumber),FOREIGN KEY(TransactionID) REFERENCES Transaction(TransactionID),FOREIGN KEY(CustomerAccountID) REFERENCES CustomerAccount(CustomerAccountID),FOREIGN KEY(CustomerAccountCardID) REFERENCES CustomerAccountCard(CustomerAccountCardID),FOREIGN KEY(CustomerAccountInvoiceID) REFERENCES CustomerAccountInvoice(CustomerAccountInvoiceID));
CREATE TABLE IF NOT EXISTS PromotionalOffer(PromotionalOfferID integer,PromotionalInitiativeID integer,BusinessUnitGroupID integer,EffectiveDate datetime,ExpiryDate datetime,MultipleEligibilityCombinationCode char(2),ConcurrenceCode char(2),OperatorDisplayName varchar(40),CustomerDisplayName varchar(40),ReceiptPrinterName varchar(40),StatusCode char(2),CustomerRewardProgramTierCode integer,MembershipProgramID integer,LevelNumber integer,ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (PromotionalOfferID,PromotionalInitiativeID),FOREIGN KEY(BusinessUnitGroupID) REFERENCES BusinessUnitGroup(BusinessUnitGroupID));
CREATE TABLE IF NOT EXISTS Reason(ReasonCode varchar(10) not null UNIQUE,ReasonCodeGroupCode varchar(20),ReasonName varchar(40),ReasonDescription varchar(4000),ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (ReasonCode));
CREATE TABLE IF NOT EXISTS Transaction(TransactionID char(32) not null UNIQUE,BusinessDayDate datetime,SequenceNumber integer,TransactionTypeCode char(6),CancelledFlag integer,VoidedFlag integer,SuspendedFlag integer,SessionID integer,ingestionTimeStamp datetime DEFAULT now(),PRIMARY KEY (TransactionID));
